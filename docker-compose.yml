version: '3.8'

services:
    mlflow-nginx:
        restart: unless-stopped
        image: nginx:1.21.5
        container_name: mlflow-nginx
        ports:
            - "80:80"
            - "443:443"
        networks:
            - frontend
        volumes:
            - /etc/apache2:/etc/nginx/passwords
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./nginx/mlflow-server.crt:/etc/nginx/mlflow-server.crt:ro
            - ./nginx/mlflow-server.key:/etc/nginx/mlflow-server.key:ro
        depends_on:
            - mlflow-server

    mlflow-metada-db:
        restart: unless-stopped
        image: postgres:9.6.24
        container_name: mlflow-metada-db
        expose:
            - "5432"
        networks:
            - backend
        volumes:
            - ./postgresql/db_data:/var/lib/postgresql/data
            - ./postgresql/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
        environment:
            - POSTGRES_PASSWORD
            - POSTGRES_MLFLOW_USER
            - POSTGRES_MLFLOW_PASSWORD
            - POSTGRES_MLFLOW_DB

    mlflow-artifacts-storage:
        restart: unless-stopped
        image: minio/minio:RELEASE.2022-01-08T03-11-54Z
        container_name: mlflow-artifacts-storage
        ports:
            - "9000:9000"
            - "9001:9001"
        networks:
            - frontend
            - backend
            - artifacts-storage
        volumes:
            - ./minio/data:/data
        environment:
            - MINIO_ROOT_USER
            - MINIO_ROOT_PASSWORD
        command: server /data --console-address ":9001"

    mlflow-artifacts-storage-client:
        restart: "no"
        image: minio/mc:RELEASE.2022-01-07T06-01-38Z
        container_name: mlflow-artifacts-storage-client
        networks:
            - artifacts-storage
        entrypoint: >
            /bin/sh -c "
            until (/usr/bin/mc config host add admin http://mlflow-artifacts-storage:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}) do echo '...waiting...' && sleep 1; done;
            /usr/bin/mc admin user add admin ${MINIO_MLFLOW_USER} ${MINIO_MLFLOW_PASSWORD};
            /usr/bin/mc admin policy set admin readwrite user=${MINIO_MLFLOW_USER};
            /usr/bin/mc config host remove admin;
            /usr/bin/mc config host add mlflow http://mlflow-artifacts-storage:9000 ${MINIO_MLFLOW_USER} ${MINIO_MLFLOW_PASSWORD};
            /usr/bin/mc mb --ignore-existing mlflow/${MINIO_MLFLOW_ARTIFACTS_BUCKET};
            exit 0;
            "
        depends_on:
            - mlflow-artifacts-storage

    mlflow-server:
        restart: unless-stopped
        build: ./mlflow
        container_name: mlflow-server
        expose:
            - "5000"
        networks:
            - frontend
            - backend
        environment:
            - MLFLOW_S3_ENDPOINT_URL=http://mlflow-artifacts-storage:9000
            - AWS_ACCESS_KEY_ID=${MINIO_MLFLOW_USER}
            - AWS_SECRET_ACCESS_KEY=${MINIO_MLFLOW_PASSWORD}
        command: mlflow server --backend-store-uri postgresql+psycopg2://${POSTGRES_MLFLOW_USER}:${POSTGRES_MLFLOW_PASSWORD}@mlflow-metada-db:5432/${POSTGRES_MLFLOW_DB} --default-artifact-root s3://${MINIO_MLFLOW_ARTIFACTS_BUCKET} --host 0.0.0.0 --port 5000
        depends_on:
            - mlflow-metada-db
            - mlflow-artifacts-storage

networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge
    artifacts-storage:
        driver: bridge
